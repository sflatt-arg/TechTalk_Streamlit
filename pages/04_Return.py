import streamlit as st
import pandas as pd
from datetime import datetime

st.header("üö≤ Retour de v√©lo")

# R√©cup√®re la session Snowflake
session = get_active_session()

# Utilitaire simple pour √©chapper les quotes dans les strings SQL
def sql_escape(s: str) -> str:
    return (s or "").replace("'", "''")

with st.form("return_form"):
    st.subheader("Informations de retour")
    
    bike_id = st.number_input(
        "ID du v√©lo", 
        min_value=1, 
        step=1, 
        help="L'ID du v√©lo que vous souhaitez retourner"
    )
    
    email = st.text_input(
        "Email de r√©servation", 
        placeholder="prenom.nom@unil.ch",
        help="L'email utilis√© lors de la r√©servation"
    )
    
    submitted = st.form_submit_button("Retourner le v√©lo")

if submitted:
    if not bike_id or not email:
        st.error("L'ID du v√©lo et l'email sont requis.")
        st.stop()
    
    email_q = sql_escape(email)
    
    # 1) V√©rifier que la r√©servation existe et correspond
    reservation_check = session.sql(f"""
        SELECT 
            r.RESERVATION_ID,
            r.BIKE_ID,
            r.USER_EMAIL,
            r.START_STATION_ID,
            r.END_STATION_ID,
            r.PICKUP_TS,
            r.DURATION_HOURS,
            r.STATUS,
            s1.NAME as START_STATION_NAME,
            s2.NAME as END_STATION_NAME,
            b.STATUS as CURRENT_BIKE_STATUS,
            b.STATION_ID
        FROM RESERVATIONS r
        JOIN STATIONS s1 ON r.START_STATION_ID = s1.STATION_ID
        JOIN STATIONS s2 ON r.END_STATION_ID = s2.STATION_ID  
        JOIN BIKES b ON r.BIKE_ID = b.BIKE_ID
        WHERE r.BIKE_ID = {int(bike_id)}
          AND r.USER_EMAIL = '{email_q}'
          AND r.STATUS = 'ACTIVE'
        ORDER BY r.PICKUP_TS DESC
        LIMIT 1
    """).collect()
    
    if not reservation_check:
        st.error("‚ùå Aucune r√©servation active trouv√©e pour ce v√©lo et cet email.")
        st.info("V√©rifiez que :")
        st.write("- L'ID du v√©lo est correct")
        st.write("- L'email correspond exactement √† celui utilis√© lors de la r√©servation")
        st.write("- La r√©servation n'a pas d√©j√† √©t√© termin√©e")
        st.stop()
    
    # R√©cup√©rer les donn√©es de la r√©servation
    reservation = reservation_check[0]
    reservation_id = reservation[0]
    start_station_name = reservation[8]
    end_station_name = reservation[9]
    current_bike_status = reservation[10]
    pickup_ts = reservation[5]
    duration_hours = reservation[6]
    end_station_id = reservation[4]
    
    # V√©rifier que le v√©lo est bien r√©serv√©
    if current_bike_status != 'RESERVED':
        st.warning(f"‚ö†Ô∏è Le v√©lo {bike_id} n'est pas dans l'√©tat 'RESERVED' (√©tat actuel: {current_bike_status})")
        st.info("Le retour va quand m√™me √™tre trait√©.")
    
    # Afficher les d√©tails de la r√©servation
    st.success("‚úÖ R√©servation trouv√©e !")
    

    st.write("**D√©tails de la r√©servation:**")
    st.write(f"- V√©lo ID: {bike_id}")
    st.write(f"- Email: {email}")
    st.write(f"- Retrait: {start_station_name}")
    st.write(f"- Retour pr√©vu: {end_station_name}")
    
     
    # Confirmer le retour
    if st.button("‚úÖ Confirmer le retour", type="primary"):
        try:
            # 2) Mettre √† jour le v√©lo pour qu'il soit disponible √† la station de retour
            session.sql(f"""
                UPDATE BIKES 
                SET 
                    STATUS = 'AVAILABLE',
                    STATION_ID = {end_station_id}
                WHERE BIKE_ID = {int(bike_id)}
            """).collect()
            
            # 3) Marquer la r√©servation comme termin√©e
            session.sql(f"""
                UPDATE RESERVATIONS 
                SET STATUS = 'FINISHED'
                WHERE RESERVATION_ID = {reservation_id}
            """).collect()
            
            st.success(f"üéâ V√©lo {bike_id} retourn√© avec succ√®s !")
            st.success(f"üìç Le v√©lo est maintenant disponible √† la station: **{end_station_name}**")
            
            # Afficher un r√©sum√©
            st.balloons()
            
            with st.expander("R√©sum√© du retour"):
                st.write("**Actions effectu√©es:**")
                st.write(f"- V√©lo {bike_id} marqu√© comme 'AVAILABLE'")
                st.write(f"- V√©lo repositionn√© √† la station: {end_station_name}")
                st.write(f"- R√©servation {reservation_id} marqu√©e comme 'FINISHED'")
                st.write(f"- Heure de retour: {datetime.now().strftime('%d/%m/%Y √† %H:%M:%S')}")
            
        except Exception as e:
            st.error(f"‚ùå Erreur lors du retour du v√©lo: {str(e)}")
            st.info("Veuillez contacter l'administrateur si le probl√®me persiste.")

# Section d'aide
with st.expander("‚ÑπÔ∏è Aide"):
    st.write("""
    **Comment retourner un v√©lo :**
    
    1. Saisissez l'ID du v√©lo (num√©ro affich√© sur le v√©lo)
    2. Entrez l'email utilis√© lors de la r√©servation
    3. Cliquez sur "Retourner le v√©lo"
    4. V√©rifiez les informations et confirmez le retour
    
    **En cas de probl√®me :**
    - V√©rifiez que l'ID du v√©lo est correct
    - Assurez-vous d'utiliser exactement le m√™me email que lors de la r√©servation
    - Contactez le support si le v√©lo n'appara√Æt pas comme r√©serv√©
    """)
